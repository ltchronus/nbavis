extends layout
block links
    //- link(rel='stylesheet', href='public/index/stylesheets/metro.css')
    link(rel='stylesheet', href='public/event/stylesheets/event.css')

block content
    div(class='event_flow')
        div(id='map',class='left')
        div(id='charts',class='right')
            div(id='chart',class='north')
            div(id='lineChart',class='south')


block scriptsEnd
    script(type="text/javascript", src="/dev/echarts/echarts-plain-original.js")
    script.
        var game_data,
              ratio;
        seajs.config({
            alias: {
                'jquery': '/sea-modules/jquery/jquery/2.1.0/jquery',
                'index': '/public/index/javascripts/index',
                'court': '/dev/components/court/src/court',
                "Zone14": '/dev/components/court/src/Zone14',
                'half_court': '/dev/components/court/src/half_court',
                'd3': '/sea-modules/gallery/d3/3.4.3/d3',
                'json2echart_data': '/dev/components/json2echart_data/src/json2echart_data',
                'highcharts':'/sea-modules/alinw/highcharts/3.0.8/highcharts-debug.js'
            }
        })

        seajs.use(['jquery', 'court', 'd3', 'Zone14', 'half_court', 'json2echart_data','highcharts'],
            function($, VORPED, d3, Zone14, half_court, json2echart_data,highcharts) {
                var courtWidth = $(".right").width();
                ratio = courtWidth / 1140;
                var courtObj = new VORPED.court(ratio);
                var court = courtObj.draw('court', '');

                //- var halfcourtObj = new half_court.court();
                //- var halfcourt =  halfcourtObj.draw('court1','');
                //- var obj_zone = new Zone14(halfcourtObj,[],[]);
                //- obj_zone.draw();
                //- obj_zone.show(0);
                //- halfcourt.selectAll(".shotzone14").attr('fill','white');

                d3.select("svg").attr("style", "background-color: white");


                //- $.getJSON('/public/data/POR_DAL_location.json', function( data){
                $.getJSON('/public/data/11-1.json', function( data){
                    game_data = new json2echart_data( data).getData();
                    console.log( game_data );
                    var height = $('#map')[0].scrollHeight;
                    var option = {
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: { // 坐标轴指示器，坐标轴触发有效
                                type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                            },
                            formatter: function(params) {
                                var param = params[0][2];
                                var result = "";
                                for (key in param) {
                                    result += key + " : " + param[key] +
                                        "<br/>";
                                }
                                return result;
                            }
                        },
                        legend: {
                            x: 'left',
                            y: height * 0.85,
                            data: game_data["@events"]
                        },
                        grid: {
                            height: height * 0.72
                        },
                        dataZoom: {
                            show: true,
                            realtime: true,
                            orient: 'verical',
                            x: 10,
                            width: 20,
                            height: height * 0.72,
                            zommlock: false,
                            start: 0,
                            end: 8
                        },
                        calculable: true,
                        xAxis: [{
                            type: 'value'
                        }],
                        yAxis: [{
                            type: 'category',
                            data: game_data["@category"]
                        }],
                        series: game_data["@possessions"]
                    };

                    init_echarts('map', option);

                    $('#lineChart').highcharts({
                        title: {
                            text: 'Monthly Average Temperature',
                            x: -20 //center
                        },
                        subtitle: {
                            text: 'Source: WorldClimate.com',
                            x: -20
                        },
                        xAxis: {
                            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
                            ]
                        },
                        yAxis: {
                            title: {
                                text: 'Temperature (°C)'
                            },
                            plotLines: [{
                                value: 0,
                                width: 1,
                                color: '#808080'
                            }]
                        },
                        tooltip: {
                            valueSuffix: '°C'
                        },
                        legend: {
                            layout: 'vertical',
                            align: 'right',
                            verticalAlign: 'middle',
                            borderWidth: 0
                        },
                        series: [{
                            name: 'Tokyo',
                            data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3,18.3, 13.9, 9.6]
                        }, {
                            name: 'New York',
                            data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]
                        }, {
                            name: 'Berlin',
                            data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3,9.0, 3.9, 1.0]
                        }, {
                            name: 'London',
                            data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2,10.3, 6.6, 4.8]
                        }]
                    });

                    court = draw(court, game_data["@fastBreak"][1]);
                    console.log( court );
                });
            })

        function init_echarts(echartsId, option) {
            var map = document.getElementById(echartsId);

            var myChart = echarts.init(map);
            myChart.setOption(option);
        }

        function draw( court, possession){
            for( var i = 0, l = possession.data.length; i < l; i++){
                var item = possession.data[i];
                drawGraph( court, item);
                if( i > 0 && item.location ){
                    for( var j = i-1; j >= 0; j--){
                        if( possession.data[j].location){
                            drawLine( court, possession.data[j], item);
                            break;
                        }
                    }
                }
            }
            return court;
        }

        function drawLine( court, item1, item2){
            //- if( item1.location&&item2.location){
            console.log( court );
                var r = 14;
                var x1 = 0.05*(+item2.location["@coord_x"]) +0.95*(+item1.location["@coord_x"]),
                      y1 = 0.05*(+item2.location["@coord_y"]) +0.95*(+item1.location["@coord_y"]),
                      x2 = 0.95*(+item2.location["@coord_x"]) +0.05*(+item1.location["@coord_x"]),
                      y2 = 0.95*(+item2.location["@coord_y"]) +0.05*(+item1.location["@coord_y"]);
                var alpha = ( (+item2.location["@coord_y"]) - (+item1.location["@coord_y"]) ) / ( (+item2.location["@coord_x"]) - (+item1.location["@coord_x"]));
                var config = {};
                config = {type:'path',attrs:{'d':'M '+x1*ratio+' '+y1*ratio+' L '+x2*ratio+' '+y2*ratio,'stroke':'#32cd32','fill':'#32cd32','stroke-width':3*ratio}};
                court.append(config.type).attr(config.attrs);
                console.log(alpha);
                config = {type:'path',attrs:{'d':'M '+(x2 - r*(0.867*Math.cos(alpha)+0.5*Math.sin(alpha)))*ratio+' '+(y2 +r*(0.5*Math.cos(alpha)-0.867*Math.sin(alpha) ) )*ratio+' L '+x2*ratio+' '+y2*ratio+' L '+(x2-r*(0.867*Math.cos(alpha)-0.867*Math.sin(alpha)))*ratio+' '+(y2-r*(0.5*Math.cos(alpha)+0.867*Math.sin(alpha)))*ratio+' ','stroke':'#32cd32','fill':'#32cd32','stroke-width':3*ratio}};
                court.append(config.type).attr(config.attrs);
            //- }
            //- return;
        }


        function drawGraph( court, item){
            var key = item.name;
            var config = {};
            var r = 7;
            switch( key){
                //- case "Drive" :
                    //- config = {type:'circle',attrs{'cx':item.location["@coord_x"]*ratio,'cy':300*ratio,'r':72*ratio,'stroke':'#ccc','fill':'#fff','stroke-width':3*ratio}};
                    //- court.append(config.type).attr(config.attrs);
                    //- break;
                case "Block" :
                    config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"])-0.5*r)*ratio+' '+(+(item.location["@coord_y"])-0.5*r)*ratio+' L '+(+(item.location["@coord_x"])+0.5*r)*ratio+' '+(+(item.location["@coord_y"])-0.5*r)*ratio+' L '+(+(item.location["@coord_x"])+0.5*r)*ratio+' '+(+(item.location["@coord_y"])+0.5*r)*ratio+' L '+(+(item.location["@coord_x"])-0.5*r)*ratio+' '+(+(item.location["@coord_y"])+0.5*r)*ratio+'z','stroke':'#87cefa','fill':'#87cefa','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Dead Ball" :
                     config = {type:'circle',attrs:{'cx':item.location["@coord_x"]*ratio,'cy':item.location["@coord_y"]*ratio,'r':r*ratio,'stroke':'#ccc','fill':'#fff','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Defensive Rebound" :
                     config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"])-0.866*r)*ratio+' '+(+(item.location["@coord_y"])+0.500*r)*ratio+' L '+(+(item.location["@coord_x"])+0.866*r)*ratio+' '+(+(item.location["@coord_y"])+0.500*r)*ratio+' L '+(+(item.location["@coord_x"])*ratio)+' '+(+(item.location["@coord_y"])-r)*ratio+'z','stroke':'#32cd32','fill':'#32cd32','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Offensive Rebound" :
                    config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"])-0.866*r)*ratio+' '+(+(item.location["@coord_y"])+0.500*r)*ratio+' L '+(+(item.location["@coord_x"])+0.866*r)*ratio+' '+(+(item.location["@coord_y"])+0.500*r)*ratio+' L '+(+(item.location["@coord_x"])*ratio)+' '+(+(item.location["@coord_y"])-r)*ratio+'z','stroke':'#ff6347','fill':'#ff6347','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Made Shot" :
                     config = {type:'circle',attrs:{'cx':item.location["@coord_x"]*ratio,'cy':item.location["@coord_y"]*ratio,'r':r*ratio,'stroke':'#ffa500','fill':'#ffa500','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Missed Shot" :
                    config = {type:'circle',attrs:{'cx':item.location["@coord_x"]*ratio,'cy':item.location["@coord_y"]*ratio,'r':r*ratio,'stroke':'#1e90ff','fill':'#fff','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;

                case "Foul" :
                    config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"])-0.5*r)*ratio+' '+(+(item.location["@coord_y"])-0.5*r)*ratio+' L '+(+(item.location["@coord_x"])+0.5*r)*ratio+' '+(+(item.location["@coord_y"])+0.5*r)*ratio+'M '+(+(item.location["@coord_x"])+0.5*r)*ratio+' '+(+(item.location["@coord_y"])-0.5*r)*ratio+' L '+(+(item.location["@coord_x"]) -0.5*r)*ratio+' '+(+(item.location["@coord_y"])+0.5*r)*ratio,'stroke':'#ff69b4','fill':'#ff69b4','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
                case "Steal" :
                     config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"])-0.866*r)*ratio+' '+(+(item.location["@coord_y"])-0.500*r)*ratio+' L '+(+(item.location["@coord_x"])+0.866*r)*ratio+' '+(+(item.location["@coord_y"])-0.500*r)*ratio+' L '+(+(item.location["@coord_x"])*ratio)+' '+(+(item.location["@coord_y"])+r)*ratio+'z','stroke':'#7b68ee','fill':'#7b68ee','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;

                case "Turnover" :
                    config = {type:'path',attrs:{'d':'M '+(+(item.location["@coord_x"]))*ratio+' '+(+(item.location["@coord_y"])-0.72*r)*ratio+' L '+(+(item.location["@coord_x"])+0.72*r)*ratio+' '+(+(item.location["@coord_y"]))*ratio+' L '+(+(item.location["@coord_x"]))*ratio+' '+(+(item.location["@coord_y"])+0.72*r)*ratio+' L '+(+(item.location["@coord_x"]) -0.72*r)*ratio+' '+(+(item.location["@coord_y"]))*ratio,'stroke':'#ffd700','fill':'#ffd700','stroke-width':3*ratio}};
                    court.append(config.type).attr(config.attrs);
                    break;
            }
        }
